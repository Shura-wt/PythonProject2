name: Deploy

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: {}

jobs:
  clean:
    name: Clean old Docker resources
    runs-on: ubuntu-latest
    steps:
      - name: Clean on remote host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          host_verification: false
          script: |
            set -euo pipefail
            echo "[ci] Cleaning old containers and volumes on $HOSTNAME"
            set +e
            docker stop edge-test api-test front-test mssql-test || true
            docker rm edge-test api-test front-test mssql-test || true
            docker volume rm baes_letsencrypt baes_mssql-data pythonproject2_letsencrypt pythonproject2_mssql-data || true
            set -e
            echo "[ci] Clean step completed"

  push:
    name: Push repository to server
    runs-on: ubuntu-latest
    needs: clean
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure target directory exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          host_verification: false
          script: |
            mkdir -p "${{ secrets.DEPLOY_WORKDIR }}"

      - name: Copy repository to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "./"
          target: ${{ secrets.DEPLOY_WORKDIR }}
          overwrite: true
          strip_components: 0
          rm: true
          exclude: |
            .git/
            .github/
            **/.git/

  lauch:
    name: Launch Docker Compose
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Run compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          host_verification: false
          script: |
            set -euo pipefail
            cd "${{ secrets.DEPLOY_WORKDIR }}"
            chmod +x compose.sh || true
            ./compose.sh up -d --build

  checkup:
    name: Check containers are running
    runs-on: ubuntu-latest
    needs: lauch
    steps:
      - name: Verify containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          host_verification: false
          script: |
            set -euo pipefail
            REQUIRED=(edge-test api-test front-test mssql-test)
            echo "[ci] Checking running containers on $HOSTNAME"
            for NAME in "${REQUIRED[@]}"; do
              if ! docker ps --format '{{.Names}} {{.Status}}' | awk -v n="$NAME" '$1==n {print $0}' | grep -q " Up "; then
                echo "[ci] ERROR: container '$NAME' is not running."
                docker ps --format '{{.Names}} {{.Status}}' || true
                exit 1
              fi
              echo "[ci] OK: $NAME is running"
            done
            echo "[ci] All required containers are running."
